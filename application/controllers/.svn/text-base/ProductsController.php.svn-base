<?php

class ProductsController extends Zend_Controller_Action
{

    public function init()
    {
        /* Initialize action controller here */
    }

    public function indexAction()
    {
        // fetch the product paginator adapter 
                 $products = new Model_Products(); 
                 $adapter = $products->fetchPaginatorAdapter($filter, $sort); 
                 $paginator = new Zend_Paginator($adapter); 
                                        
                 // show 10 products per page 
                 $paginator->setItemCountPerPage(6); 
                                        			
                 // get the page number that is passed in the request. 
                 //if none is set then default to page 1. 
                 $page = $this->_request->getParam('page', 1); 
                 $paginator->setCurrentPageNumber($page); 
                                        			
                 // pass the paginator to the view to render 
                 $this->view->paginator = $paginator;

    }

    public function detailsAction()
    {
        $productModel = new Model_Products();
                                $id = $this->_request->getParam('id'); 
                                $product = $productModel->find($id)->current(); 
                                		   		
                               $this->view->product = $product;
    }

    public function createAction()
    {
        $image="";
                              $productForm = new Form_ProductForm();
                                if ($this->getRequest()->isPost()) {
                                    if ($productForm->isValid($_POST)) {
                                        // create a new page item
                                        $productModel = new Model_Products();
                        				 if ($productForm->image->isUploaded()) {
                                            $productForm->image->receive();
                                            $image = basename($productForm->image->getFileName());
                                        }
                                        $result = $productModel->createProduct( 
                                                                $productForm->getValue('name'), 
                                                                $productForm->getValue('price'), 
                                                                $productForm->getValue('cost'), 
                                                                $productForm->getValue('stock'), 
                                                                $image, 
                                                                $productForm->getValue('keywords'), 
                                                                $productForm->getValue('description') 
                                                				            ); 
                        													
                        				if($result) { 
                                              $this->_forward('list'); 
                                        } 
                                    }
                                }
                					$productForm->setAction('/products/create');
                					$this->view->form = $productForm;
    }

    public function updateAction()
    {
        $image="";
                              $productForm = new Form_ProductForm();
                                if ($this->getRequest()->isPost()) {
                                    if ($productForm->isValid($_POST)) {
                                        // create a new page item
                                        $productModel = new Model_Products();
                        				 if ($productForm->image->isUploaded()) {
                                            $productForm->image->receive();
                                            $image = basename($productForm->image->getFileName());
                                        }
                                        $result = $productModel->updateProduct( 
                												$productForm->getValue('id'),
                                                                $productForm->getValue('name'), 
                                                                $productForm->getValue('price'), 
                                                                $productForm->getValue('cost'), 
                                                                $productForm->getValue('stock'), 
                                                                $image, 
                                                                $productForm->getValue('keywords'), 
                                                                $productForm->getValue('description') 
                                                				            ); 
                        													
                        				if($result) { 
                                              $this->_forward('list'); 
                                        } 
                                    }
                                }else{
                					
                					$id = $this->_request->getParam('id'); 
                					$productModel = new Model_Products();
                					$productModel = $productModel->find($id)->current(); 
                					$productForm->populate($productModel->toArray()); 
                					        $imagePreview = $productForm->createElement('image', 'image_preview');
        							// element options
        							$imagePreview->setLabel('Preview Image: ');
        							//$imagePreview->setAttrib('style', 'width:200px;height:auto;');
        							// add the element to the form
        							$imagePreview->setOrder(5);
        							$imagePreview->setImage("/images/products/".$productModel->thump);
        							
        							$productForm->addElement($imagePreview);
                					
                				}
                				$productForm->setAction('/products/update');				
                				$this->view->form = $productForm;
    }

    public function deleteAction()
    {
        $productModel = new Model_Products();
                		$id = $this->_request->getParam('id'); 
                		$productModel->deleteProduct($id); 
                		return $this->_forward('list');
    }

    public function listAction()
    {
        $productModel = new Model_Products();
                // fetch all of the current pages
                $select = $productModel->select();
                $select->order('name');
                $products = $productModel->fetchAll($select);
                if ($products->count() > 0) {
                    $this->view->products = $products;
                } else {
                    $this->view->products = null;
				}
    }

    public function addcatAction()
    {
        $categoryModel=new Model_Category();
		$categoryForm=new Form_CategoryForm();
		$categoryForm->setAction('/products/createCat');
        $this->view->form = $categoryForm;
    }


}











